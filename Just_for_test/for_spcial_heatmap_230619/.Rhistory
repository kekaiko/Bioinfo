#安装psych包；
#install.packages("psych")
#载入R包；
library(psych)
#计算基因表达量之间的pearson相关性；
#ct1 <- corr.test(expt,chemt,method = "pearson")
ct1 <- corr.test(expt,chemt,method = "spearman")
#提取相关性系数矩阵；
r1 <- ct1$r
#提取pvalue值矩阵；
p1 <- round(ct1$p,5)
#预览转置后的相关性系数矩阵和pvalue矩阵；
r2 <- round(t(r1),3)
p2 <- t(p1)
r2[1:9,1:8]
p2[1:9,1:6]
#使用显著性星号标记进行替换；
p2[p2>=0 & p2 < 0.001] <- "***"
p2[p2>=0.001 & p2 < 0.01] <- "**"
p2[p2>=0.01 & p2 < 0.05] <- "*"
p2[p2>=0.05 & p2 <= 1] <- ""
#预览替换后的矩阵；
p2[1:9,1:9]
#使用ComplexHeatmap包绘制热图；
library(BiocManager)
#安装相关R包；
#install("ComplexHeatmap")
library(ComplexHeatmap)
library(circlize)
#创建颜色映射函数，数据范围与颜色相对应；
range(r2)
#[1] -0.808 0.883
#这里创建4种不同的配色方案；
col_fun1 = colorRamp2(c(range(r2)[1], 0, range(r2)[2]), c("#0f86a9", "white", "#FC8452"))
col_fun2 = colorRamp2(c(range(r2)[1], 0, range(r2)[2]), c("#A5CC26", "white", "#FF7BAC"))
col_fun3 = colorRamp2(c(range(r2)[1], 0, range(r2)[2]), c("#3FA9F5", "white", "#FF931E"))
col_fun4 = colorRamp2(c(-1, 0, 1), c("#ffa500", "white", "#B3A9EB"))
#查看颜色函数效果；
col_fun1(seq(-2, 2))
#[1] "#0F86A9FF" "#0F86A9FF" "#FFFFFFFF" "#FC8452FF" "#FC8452FF"
#热图格子大小设置；
cellwidth = 0.7
cellheight = 0.7
cn = dim(r2)[2]
rn = dim(r2)[1]
w=cellwidth*cn
h=cellheight*rn
#绘制相关性热图；
Heatmap(r2,name ="r", col = col_fun2,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "gray30",lwd = 1.4),
row_dend_gp = gpar(col = "gray30",lwd = 1.4),
#设置聚类gap数量小；
row_split = 2, column_split = 2,
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)))
#绘制热图，显示相关性系数，保留两位小数；
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
#绘制热图显示显著性星号标记；
Heatmap(r2,name ="r", col = col_fun2,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示星号标记设置；
#vjust垂直微调星号的位置；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(p2[i, j], x, y, vjust = 0.7,
gp = gpar(fontsize = 13,col="white"))
})
#只显示大于某一范围的数值；
Heatmap(r2,name ="r", col = col_fun3,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示绝对值大于0.5的相关性系数；
cell_fun = function(j, i, x, y, width, height, fill) {
if(abs(r2[i, j]) > 0.5){
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))}
})
#使用加减号表示正负相关；
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#使用加减号表示正负相关；
cell_fun = function(j, i, x, y, width, height, fill) {
if(r2[i, j] > 0.5){
grid.text("+", x, y,
gp = gpar(fontsize = 12,
fontface = "plain",
col="gray10"))
}else if(r2[i, j] < -0.5){
grid.text("-", x, y, vjust = 0.4,
gp = gpar(fontsize = 13,
fontface = "plain",
col="gray10"))
}
})
#绘制热图，显示相关性系数，保留两位小数；
png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 800, height = 800, res = 300)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 1600, height = 1600, res = 300)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 1600, height = 1600)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 800, height = 800, res = 100)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 800, height = 800, res = 200)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 800, height = 800, res = 120)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
#绘制热图，显示相关性系数，保留两位小数；
png(filename = "r-data-heatmap.png", width = 800, height = 800, res = 100)
#png("r-data-heatmap.png")
Heatmap(r2,name ="r", col = col_fun1,
#格子大小设置；
width = unit(w, "cm"),
height = unit(h, "cm"),
rect_gp = gpar(col = "white", lwd = 1.5),
border_gp = gpar(col = "#0f86a9",lty = 2,lwd = 1.2),
#聚类树样式设置；
column_dend_height = unit(1.5, "cm"),
row_dend_width = unit(1.5, "cm"),
column_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
row_dend_gp = gpar(col = "#0f86a9",lwd = 1.4),
#设置聚类gap数量和大小；
row_split = 2, column_split = 2,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
#行列标签文字样式设置；
row_title = NULL,column_title = NULL,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8),
#图例样式设置；
heatmap_legend_param = list(legend_height = unit(3, "cm"),
grid_width = unit(0.4, "cm"),
labels_gp = gpar(col = "gray20",
fontsize = 8)),
#显示数值设置；
#i,j对应数据矩阵的行和列索引；
#x,y对应热图cell中心点坐标；
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.2f", r2[i, j]), x, y,
gp = gpar(fontsize = 6))
})
dev.off()
